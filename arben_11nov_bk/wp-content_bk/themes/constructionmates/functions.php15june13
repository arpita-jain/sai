<?php
/**
 * Filename: functions.php
 * Purpose: Holds all of the backend code required to implement this themes features
 * Author: Matthew Sigley, adapted from the functions.php in "Twenty Ten" by the WordPress team
 * Version: 1.20101014
 */
/** Tell WordPress to run constructionmates_setup() when the 'after_setup_theme' hook is run. */
add_action( 'after_setup_theme', 'constructionmates_setup' );
//Check if theme has already been loaded, since hooks are sometimes run twice
if ( ! function_exists( 'constructionmates_setup' ) ):
	/**
	 * Function Name: constructionmates_setup
	 * Purpose: Tells wordpress what features this theme supports.
	 */
	function constructionmates_setup() {
		// This theme styles the visual editor with editor-style.css to match the theme style.
		add_editor_style();
		// This theme uses post thumbnails
		add_theme_support( 'post-thumbnails' );
		add_image_size( 'homepage-post-thumb', 630, 9999 ); // Permalink thumbnail size for homepage
		// Add default posts and comments RSS feed links to head
		add_theme_support( 'automatic-feed-links' );
		// This theme uses wp_nav_menu() in one location.
		register_nav_menus( array(
			'primary' => __( 'Primary Navigation', 'constructionmates' ),
		) );
	}
endif;
/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 *
 * To override this in a child theme, remove the filter and optionally add
 * your own function tied to the wp_page_menu_args filter hook.
 */
function constructionmates_page_menu_args( $args ) {
	$args['show_home'] = true;
	return $args;
}
add_filter( 'wp_page_menu_args', 'constructionmates_page_menu_args' );

/**
 * Makes some changes to the <title> tag, by filtering the output of wp_title().
 *
 * If we have a site description and we're viewing the home page or a blog posts
 * page (when using a static front page), then we will add the site description.
 *
 * If we're viewing a search result, then we're going to recreate the title entirely.
 * We're going to add page numbers to all titles as well, to the middle of a search
 * result title and the end of all other titles.
 *
 * The site title also gets added to all titles.
 *
 *
 * @param string $title Title generated by wp_title()
 * @param string $separator The separator passed to wp_title(). Twenty Ten uses a
 * 	vertical bar, "|", as a separator in header.php.
 * @return string The new title, ready for the <title> tag.
 */
function constructionmates_filter_wp_title( $title, $separator ) {
	// Don't affect wp_title() calls in feeds.
	if ( is_feed() )
		return $title;

	// The $paged global variable contains the page number of a listing of posts.
	// The $page global variable contains the page number of a single post that is paged.
	// We'll display whichever one applies, if we're not looking at the first page.
	global $paged, $page;

	if ( is_search() ) {
		// If we're a search, let's start over:
		$title = sprintf( __( 'Search results for %s', 'constructionmates' ), '"' . get_search_query() . '"' );
		// Add a page number if we're on page 2 or more:
		if ( $paged >= 2 )
			$title .= " $separator " . sprintf( __( 'Page %s', 'constructionmates' ), $paged );
		// Add the site name to the end:
		$title .= " $separator " . get_bloginfo( 'name', 'display' );
		// We're done. Let's send the new title back to wp_title():
		return $title;
	}

	// Otherwise, let's start by adding the site name to the end:
	$title .= get_bloginfo( 'name', 'display' );

	// If we have a site description and we're on the home/front page, add the description:
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) )
		$title .= " $separator " . $site_description;

	// Add a page number if necessary:
	if ( $paged >= 2 || $page >= 2 )
		$title .= " $separator " . sprintf( __( 'Page %s', 'constructionmates' ), max( $paged, $page ) );

	// Return the new title to wp_title():
	return $title;
}
add_filter( 'wp_title', 'constructionmates_filter_wp_title', 10, 2 );

/**
 * Sets the post excerpt length to 40 characters.
 *
 * To override this length in a child theme, remove the filter and add your own
 * function tied to the excerpt_length filter hook.
 *
 * @return int
 */
function constructionmates_excerpt_length( $length ) {
	return 40;
}
add_filter( 'excerpt_length', 'constructionmates_excerpt_length' );

/**
 * Returns a "Continue Reading" link for excerpts
 *
 * @return string "Continue Reading" link
 */
function constructionmates_continue_reading_link() {
	return '  <div class="read-more-job-btn"><span><a href="'. get_permalink() . '">' . __( 'Read More', 'constructionmates' ) . '</a></span> </div>';
}

/**
 * Replaces "[...]" (appended to automatically generated excerpts) with an ellipsis and constructionmates_continue_reading_link().
 *
 * To override this in a child theme, remove the filter and add your own
 * function tied to the excerpt_more filter hook.
 *
 * @return string An ellipsis
 */
function constructionmates_auto_excerpt_more( $more ) {
	return ' &hellip;' .constructionmates_continue_reading_link();
}
add_filter( 'excerpt_more', 'constructionmates_auto_excerpt_more' );

/**
 * Adds a pretty "Continue Reading" link to custom post excerpts.
 *
 * To override this link in a child theme, remove the filter and add your own
 * function tied to the get_the_excerpt filter hook.
 *
 * @return string Excerpt with a pretty "Continue Reading" link
 */
function constructionmates_custom_excerpt_more( $output ) {
	if ( has_excerpt() && ! is_attachment() ) {
		$output .= constructionmates_continue_reading_link();
	}
	return $output;
}
add_filter( 'get_the_excerpt', 'constructionmates_custom_excerpt_more' );
// Original PHP code by Chirp Internet: www.chirp.com.au // Please acknowledge use of this code by including this header. 
/**
 * Custom Truncate function for content boxes and other custom content areas
 *
 * @return string Truncated string under length $limit, cut off at $break, if it exists, with pad on the 
 *  end of it
 */
function myTruncate($string, $limit, $break=".", $pad="...") { 
	// return with no change if string is shorter than $limit 
	if(strlen($string) <= $limit) return $string; 
	
	// is $break present between $limit and the end of the string? 
	if(false !== ($breakpoint = strpos($string, $break, $limit))) { 
		if($breakpoint < strlen($string) - 1) { 
			$string = substr($string, 0, $breakpoint) . $pad; 
			} 
		} 
	return $string; 
	}

/**
 * Remove inline styles printed when the gallery shortcode is used.
 *
 * Galleries should be styled in the theme's style.css if they are going to be used in the design
 *
 * @return string The gallery style filter, with the styles themselves removed.
 */
function constructionmates_remove_gallery_css( $css ) {
	return preg_replace( "#<style type='text/css'>(.*?)</style>#s", '', $css );
}
add_filter( 'gallery_style', 'constructionmates_remove_gallery_css' );

if ( ! function_exists( 'constructionmates_comment' ) ) :
/**

 * Template for comments and pingbacks.

 *

 * To override this walker in a child theme without modifying the comments template

 * simply create your own constructionmates_comment(), and that function will be used instead.

 *

 * Used as a callback by wp_list_comments() for displaying the comments.

 *

 */



function constructionmates_comment( $comment, $args, $depth ) {

	$GLOBALS['comment'] = $comment;

	switch ( $comment->comment_type ) :

		case 'pingback' :

		case 'trackback' :

	?>

	<li class="post pingback">

		<p><?php _e( 'Pingback:', 'constructionmates' ); ?> <?php comment_author_link(); ?><?php edit_comment_link( __( 'Edit', 'constructionmates' ), '<span class="edit-link">', '</span>' ); ?></p>

	<?php

			break;

		default :

	?>

	<li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>">

		<article id="comment-<?php comment_ID(); ?>" class="comment">

			<footer class="comment-meta">

				<div class="comment-author vcard">

					<?php

						$avatar_size = 68;

						if ( '0' != $comment->comment_parent )

							$avatar_size = 39;



						echo get_avatar( $comment, $avatar_size );



						/* translators: 1: comment author, 2: date and time */

						printf( __( '%1$s on %2$s <span class="says">said:</span>', 'constructionmates' ),

							sprintf( '<span class="fn">%s</span>', get_comment_author_link() ),

							sprintf( '<a href="%1$s"><time pubdate datetime="%2$s">%3$s</time></a>',

								esc_url( get_comment_link( $comment->comment_ID ) ),

								get_comment_time( 'c' ),

								/* translators: 1: date, 2: time */

								sprintf( __( '%1$s at %2$s', 'constructionmates' ), get_comment_date(), get_comment_time() )

							)

						);

					?>



					<?php edit_comment_link( __( 'Edit', 'constructionmates' ), '<span class="edit-link">', '</span>' ); ?>

				</div><!-- .comment-author .vcard -->



				<?php if ( $comment->comment_approved == '0' ) : ?>

					<em class="comment-awaiting-moderation"><?php _e( 'Your comment is awaiting moderation.', 'constructionmates' ); ?></em>

					<br />

				<?php endif; ?>



			</footer>



			<div class="comment-content"><?php comment_text(); ?></div>



			<div class="reply">

				<?php comment_reply_link( array_merge( $args, array( 'reply_text' => __( 'Reply <span>&darr;</span>', 'constructionmates' ), 'depth' => $depth, 'max_depth' => $args['max_depth'] ) ) ); ?>

			</div><!-- .reply -->

		</article><!-- #comment-## -->



	<?php

			break;

	endswitch;

}

endif; // ends check for twentyeleven_comment()

/**
 * Register widgetized areas, including two sidebars and four widget-ready columns in the footer.
 *
 * To override constructionmates_widgets_init() in a child theme, remove the action hook and add your own
 * function tied to the init hook.
 *
 * @uses register_sidebar
 */
function constructionmates_widgets_init() {
	
	// Area 1, located at header the social media.
	register_sidebar( array(
		'name' => __( 'Social Widget Area', 'constructionmates' ),
		'id' => 'social-widget-area',
		'description' => __( 'Social Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	
	// Area 1, located Below of the slider.
	register_sidebar( array(
		'name' => __( 'Home Widget Area', 'constructionmates' ),
		'id' => 'home-widget-area',
		'description' => __( 'Home Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h1>',
		'after_title' => '</h1>',
	) );
	
	
	// Area 2, located Below of the slider.
	register_sidebar( array(
		'name' => __( 'Home1 Widget Area', 'constructionmates' ),
		'id' => 'home1-widget-area',
		'description' => __( 'Home1 Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h1>',
		'after_title' => '</h1>',
	) );
	
	
	// Area 3, located Below of the slider.
	register_sidebar( array(
		'name' => __( 'Home2 Widget Area', 'constructionmates' ),
		'id' => 'home2-widget-area',
		'description' => __( 'Home2 Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h1>',
		'after_title' => '</h1>',
	) );
	
	register_sidebar( array(
		'name' => __( 'Apply Widget Area', 'constructionmates' ),
		'id' => 'apply-widget-area',
		'description' => __( 'Apply Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '',
		'after_title' => '',
	) );
	
	
	
	register_sidebar( array(
		'name' => __( 'Testimonial_innerpage Widget Area', 'constructionmates' ),
		'id' => 'testimonial_innerpage-widget-area',
		'description' => __( 'Testimonial_innerpage Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '',
		'after_title' => '',
	) );
	
	
	
	register_sidebar( array(
		'name' => __( 'Highlights Widget Area', 'constructionmates' ),
		'id' => 'highlights-widget-area',
		'description' => __( 'Highlights Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '',
		'after_title' => '',
	) );
	
	register_sidebar( array(
		'name' => __( 'Home_Content Widget Area', 'constructionmates' ),
		'id' => 'home_content-widget-area',
		'description' => __( 'Home_Content Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '',
		'after_title' => '',
	) );
	
	// Area 1, located at the top social
	
	register_sidebar( array(
		'name' => __( 'Social Widget Area', 'constructionmates' ),
		'id' => 'social-widget-area',
		'description' => __( 'social Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	// Area 1, located at the top Subscribe.
	register_sidebar( array(
		'name' => __( 'Subscribe Widget Area', 'constructionmates' ),
		'id' => 'subscribe-widget-area',
		'description' => __( 'subscribe Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	register_sidebar( array(
		'name' => __( 'Footer Widget Area', 'constructionmates' ),
		'id' => 'footer-widget-area',
		'description' => __( 'footer Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	register_sidebar( array(
		'name' => __( 'Slide Widget Area', 'constructionmates' ),
		'id' => 'slide-widget-area',
		'description' => __( 'Slide Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	

	// Area 1, located at the top menu.
	register_sidebar( array(
		'name' => __( 'Header Right Widget Area', 'constructionmates' ),
		'id' => 'header-right-widget-area',
		'description' => __( 'Header Right Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '',
		'after_title' => '',
	) );
	
	register_sidebar( array(
		'name' => __( 'Paypal Widget Area', 'constructionmates' ),
		'id' => 'paypal-widget-area',
		'description' => __( 'Paypal Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	register_sidebar( array(
		'name' => __( 'Calculator Widget Area', 'constructionmates' ),
		'id' => 'calculator-widget-area',
		'description' => __( 'Calculator Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h2>',
		'after_title' => '</h2>',
	) );
	
	// Area 1, located at the top menu.
	//register_sidebar( array(
	//	'name' => __( 'Top Menu Widget Area', 'constructionmates' ),
	//	'id' => 'top-menu-widget-area',
	//	'description' => __( 'Top Menu Widget Area', 'constructionmates' ),
	//	'before_widget' => '<li>',
	//	'after_widget' => '</li>',
	//	'before_title' => '',
	//	'after_title' => '',
	//) );


// Area 3, located in the left sidebar.
	//$logo_src = bloginfo('template_url').'/images/inner_icon.png';
	//echo get_template_directory_uri();
	register_sidebar( array(
		'name' => __( 'Sidebar Widget Area', 'constructionmates' ),
		'id' => 'sidebar-widget-area',
		'description' => __( 'The Sidebar Widget Area', 'constructionmates' ),
		'before_widget' => '',
		'after_widget' => '',
		'before_title' => '<h3>',
		'after_title' => '</h3>',
	) );
	
	// Area 2, located at the home page banner .
		//comment by sheruji 28jan 2013
	//register_sidebar( array(
	//	'name' => __( 'Home Page Banner Widget Area', 'constructionmates' ),
	//	'id' => 'home-page-banner-widget-area',
	//	'description' => __( 'The Home Page Banner Widget Area', 'constructionmates' ),
	//	'before_widget' => '',
	//	'after_widget' => '',
	//	'before_title' => '',
	//	'after_title' => '',
	//) );

	
	
	// Area 4, located at the bottom menu.
	//comment by sheruji 28jan 2013
	//register_sidebar( array(
	//	'name' => __( 'Bottom Menu Widget Area', 'constructionmates' ),
	//	'id' => 'bottom-menu-widget-area',
	//	'description' => __( 'Bottom Menu Widget Area', 'constructionmates' ),
	//	'before_widget' => '',
	//	'after_widget' => '',
	//	'before_title' => '',
	//	'after_title' => '',
	//) );



	
}
/** Register sidebars by running constructionmates_widgets_init() on the widgets_init hook. */
add_action( 'widgets_init', 'constructionmates_widgets_init' );

/**
 * Removes the default styles that are packaged with the Recent Comments widget.
 *
 * To override this in a child theme, remove the filter and optionally add your own
 * function tied to the widgets_init action hook.
 *
 */
function constructionmates_remove_recent_comments_style() {
	global $wp_widget_factory;
	remove_action( 'wp_head', array( $wp_widget_factory->widgets['WP_Widget_Recent_Comments'], 'recent_comments_style' ) );
}
add_action( 'widgets_init', 'constructionmates_remove_recent_comments_style' );

if ( ! function_exists( 'constructionmates_posted_on' ) ) :
/**
 * Prints HTML with meta information for the current post—date/time and author.
 *
 * @since Twenty Ten 1.0
 */
function constructionmates_posted_on() {
	printf( __( '<span class="%1$s">Posted on</span> %2$s <span class="meta-sep">by</span> %3$s', 'constructionmates' ),
		'meta-prep meta-prep-author',
		sprintf( '<a href="%1$s" title="%2$s" rel="bookmark"><span class="entry-date">%3$s</span></a>',
			get_permalink(),
			esc_attr( get_the_time() ),
			get_the_date()
		),
		sprintf( '<span class="author vcard"><a class="url fn n" href="%1$s" title="%2$s">%3$s</a></span>',
			get_author_posts_url( get_the_author_meta( 'ID' ) ),
			sprintf( esc_attr__( 'View all posts by %s', 'constructionmates' ), get_the_author() ),
			get_the_author()
		)
	);
}
endif;

if ( ! function_exists( 'constructionmates_posted_in' ) ) :
/**
 * Prints HTML with meta information for the current post (category, tags and permalink).
 *
 * @since Twenty Ten 1.0
 */
function constructionmates_posted_in() {
	// Retrieves tag list of current post, separated by commas.
	$tag_list = get_the_tag_list( '', ', ' );
	if ( $tag_list ) {
		$posted_in = __( 'This entry was posted in %1$s and tagged %2$s. Bookmark the <a href="%3$s" title="Permalink to %4$s" rel="bookmark">permalink</a>.', 'constructionmates' );
	} elseif ( is_object_in_taxonomy( get_post_type(), 'category' ) ) {
		$posted_in = __( 'This entry was posted in %1$s. Bookmark the <a href="%3$s" title="Permalink to %4$s" rel="bookmark">permalink</a>.', 'constructionmates' );
	} else {
		$posted_in = __( 'Bookmark the <a href="%3$s" title="Permalink to %4$s" rel="bookmark">permalink</a>.', 'constructionmates' );
	}
	// Prints the string, replacing the placeholders.
	printf(
		$posted_in,
		get_the_category_list( ', ' ),
		$tag_list,
		get_permalink(),
		the_title_attribute( 'echo=0' )
	);
}
endif;

/**
 * Function Name: constructionmates_custom_rss2
 * Purpose: Outputs the rss2 feed template defined in the constructionmates theme folder
 */
function constructionmates_custom_rss2(){
	include TEMPLATEPATH . '/feed-rss2.php';
}

/**
 * Function Name: constructionmates_custom_rss2
 * Purpose: Outputs the rss2 feed template defined in the constructionmates theme folder
 */
function constructionmates_custom_rss(){
	include TEMPLATEPATH . '/feed-rss.php';
}

/**
 * Function Name: constructionmates_custom_rss_setup
 * Purpose: Overwrites the default rss 1.0 and rss 2.0 templates with the custom rss templates defined
 *  in the constructionmates theme folder, if they exist. If no custom rss templates are defined, the wordpress
 *  default templates will be used.
 */
function constructionmates_custom_rss_setup(){
	if(file_exists(TEMPLATEPATH . '/feed-rss2.php')){
		add_feed('rss', 'constructionmates_custom_rss');
		}
	if(file_exists(TEMPLATEPATH . '/feed-rss2.php')){
		add_feed('rss2', 'constructionmates_custom_rss2');
		}
}

add_action('init', 'constructionmates_custom_rss_setup');

//A unique id to be given to each slider for styling purposes and so that jquery can tell the sliders appart
$jquery_slider_unique_id = 1;


/**
 * Function Name: jquery_slider_1
 * Purpose: Creates a jquery slide based on the posts in the query string. This particular style of
 *  slider will have an image area at the top, with a text overlay on the bottom, and next/previous
 *  arrows for navigation.
 * Input:
 *  -query_string(string): A wordpress serialized query string for the posts you wish to populate the
 *   slider with. See the query_posts function for further documention on this.
 *  -width(decimal): The of the slider in pixels.
 *  -height(decimal): The height of the slider in pixels.
 *  -interval(integer): The time between slide changes in milliseconds.
 */
function jquery_slider_1($query_string, $width=630, $height=250, $interval=5000){
	global $jquery_slider_unique_id;
	
	//Container div for slider
	echo '<div class="slider-1-container" id="slider-id-'.$jquery_slider_unique_id.'" style="width: '.$width.'px; height: '.$height.'px;" >' . "\n" .
		'<ul>' . "\n";
		
	//Previous slide link
	?>
	<a class="prev-link">
		<span class="prev-text">&larr;</span>
	</a>
	<?php
	
	//Next slide link
	?>
	<a class="next-link">
		<span class="next-text">&rarr;</span>
	</a>
    <?php
	//Create an integer variable for assigning slide number classes to the list items
	$slide_number = 1;
	
	//Start a Seperate wordpress loop for the jquery slides using a new WP_Query object
	$my_query = new WP_Query($query_string);
	
	//var_dump($my_query);
	while ($my_query->have_posts()) : $my_query->the_post();
		//Get the custom fields for the post
		$custom_fields = get_post_custom($my_query->post->ID);
		if (has_post_thumbnail($my_query->post->ID) && array_key_exists('slider title', $custom_fields) && array_key_exists('slider description', $custom_fields) ){
			$post_thumb_id = get_post_thumbnail_id($my_query->post->ID);
			$post_thumb = wp_get_attachment_image_src($post_thumb_id, 'homepage-post-thumb', false);
			?>
			<li class="slide slide-number-<?php echo $slide_number; ?>" style="background: url('<?php echo $post_thumb[0]; ?>') bottom left no-repeat #8B8B8B; width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;" >
            	<div class="slide-container-div" style="width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;">
                    <div class="text-container">
                        <span class="title"><?php echo $custom_fields['slider title'][0]; ?></span>
                        <p class="description"><?php echo $custom_fields['slider description'][0]; ?></p>
                    </div>
                    <a class="read-more-link" href="<?php echo get_permalink($my_query->post->ID); ?>" >
                        <span class="read-more-text">Read More &raquo;</span>
                    </a>
                </div>
            
            <!--Image tag for preloading the slide's image-->
            <img src="<?php echo $post_thumb[0]; ?>" style="background: url:('<?php echo $post_thumb[0]; ?>'); display: none;" />
            
            </li>
            
    		<?php
			
			//A slide was created for the slider, so increment the slide_number
			$slide_number++;
			}
			endwhile;
	echo '</ul>' . "\n" .
		'</div><!--.slider_1_container-->';
	
	//JQuery to run this slider
	echo '<script type="text/javascript" src="'.get_bloginfo('template_url').'/js/slider1.js.php?id='.$jquery_slider_unique_id.'&amp;last_slide='.($slide_number-1).'&amp;interval='.$interval.'&amp;width='.$width.'"></script>' . "\n";
	
	//Increment the unique identifier for the sliders, so the next slider has a unique id
	$jquery_slider_unique_id++;
}

function jquery_slider_1_head(){
	echo '<!--CSS for JQuery Slider 1-->';
	echo "\n" . '<link rel="stylesheet" href="'.get_bloginfo('template_url').'/css/slider1.css" type="text/css" media="all" />' . "\n";
}

//Add the stylesheet for slider_1 to the <head>
add_action('wp_head', 'jquery_slider_1_head');

/**
 * Function Name: jquery_slider_2
 * Purpose: Creates a jquery slide based on the posts in the query string. This particular style of
 *  slider will have an image area at the top, with a text overlay on the bottom, and next/previous
 *  arrows for navigation.
 * Input:
 *  -query_string(string): A wordpress serialized query string for the posts you wish to populate the
 *   slider with. See the query_posts function for further documention on this.
 *  -width(decimal): The of the slider in pixels.
 *  -height(decimal): The height of the slider in pixels.
 *  -interval(integer): The time between slide changes in milliseconds.
 */
function jquery_slider_2($query_string, $width=630, $height=250, $interval=5000){
	global $jquery_slider_unique_id;
	
	//Container div for slider
	echo '<div class="slider-2-container" id="slider-id-'.$jquery_slider_unique_id.'" style="width: '.$width.'px; height: '.$height.'px;" >' . "\n" .
		'<ul>' . "\n";
	
	//Create an integer variable for assigning slide number classes to the list items
	$slide_number = 1;
	
	//Start a Seperate wordpress loop for the jquery slides using a new WP_Query object
	$my_query = new WP_Query($query_string);
	
	while ($my_query->have_posts()) : $my_query->the_post();
		//Get the custom fields for the post
		$custom_fields = get_post_custom($my_query->post->ID);
		if (has_post_thumbnail($my_query->post->ID) && array_key_exists('slider title', $custom_fields) ){
			$post_thumb_id = get_post_thumbnail_id($my_query->post->ID);
			$post_thumb = wp_get_attachment_image_src($post_thumb_id, 'homepage-post-thumb', false);
			?>
			<li class="slide slide-number-<?php echo $slide_number; ?>" style="background: url('<?php echo $post_thumb[0]; ?>') top left no-repeat #8B8B8B; width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;" >
            	<div class="slide-container-div" style="width: <?php echo $width; ?>px; height: <?php echo $height; ?>px;">
                    <div class="text-container" style="width: <?php echo $width; ?>px; height: 30%;" >
                        <span class="title"><?php echo $custom_fields['slider title'][0]; ?></span>
                        <p class="description"><?php echo $custom_fields['slider description'][0]; ?></p>
                        <a class="read-more-link" href="<?php echo get_permalink($my_query->post->ID); ?>" >
                            <span class="read-more-text">Read More</span>
                        </a>
                    </div>
                </div>
                        
            <!--Image tag for preloading the slide's image-->
            <img src="<?php echo $post_thumb[0]; ?>" style="background: url:('<?php echo $post_thumb[0]; ?>'); display: none;" />
            
            </li>

    		<?php
			
			//A slide was created for the slider, so increment the slide_number
			$slide_number++;
			}
			endwhile;
	echo '</ul>' . "\n";
	
	//Start a for loop for the creation of the number links
	echo '<ul class="number-list">' . "\n";
	for($i=1; $i<$slide_number; $i++){
		?>
        <li class="number-item">
        	<a class="number-link link-number-<?php echo $i; ?>"><span class="number-text"><?php echo $i; ?></span></a>
        </li>
        <?php
		}
	echo '</ul>' . "\n";
	echo '</div><!--.slider_2_container-->';

	//JQuery to run this slider
	echo '<script type="text/javascript" src="'.get_bloginfo('template_url').'/js/slider2.js.php?id='.$jquery_slider_unique_id.'&amp;last_slide='.($slide_number-1).'&amp;interval='.$interval.'&amp;width='.$width.'"></script>' . "\n";
	
	//Increment the unique identifier for the sliders, so the next slider has a unique id
	$jquery_slider_unique_id++;
}

function jquery_slider_2_head(){
	echo '<!--CSS for JQuery Slider 2-->';
	echo "\n" . '<link rel="stylesheet" href="'.get_bloginfo('template_url').'/css/slider2.css" type="text/css" media="all" />' . "\n";
}

//Add the stylesheet for slider_2 to the <head>
add_action('wp_head', 'jquery_slider_2_head');


//////////////////////////////////// FOR HOME PAGE SLIDE SHOW NBN //////////////////////////////////////////////////////













if ( ! isset( $content_width ) )
	$content_width = 584;



/**
 * Register our sidebars and widgetized areas. Also register the default Epherma widget.
 *
 * @since Twenty Eleven 1.0
 */


/********************* nbn 15 Sept Start **********************/

function Get_Cat_Post($cat_ID)

{

/*$args = array(
    'numberposts' => 1,
    'offset' => 0,
     'category' =>$cat_ID,
     'child_of'   => 1,
     'orderby' => 'post_date',
    'order' => 'DESC',
    'post_type' => 'post',
    'post_status' => 'publish',
    'suppress_filters' => true );*/


query_posts( 'cat='.$cat_ID );



// The Loop

$i=1;

while ( have_posts() ) : the_post();

$image = wp_get_attachment_image_src( get_post_thumbnail_id( get_the_ID() ), 'single-post-thumbnail' );



         

	

	//echo '<a href="'.get_permalink(get_the_ID()).'">'; 

	if($i%3!=0)

	{

	echo '<div class="box_text_inner curs" onclick=\'javascript:redir("'.get_permalink(get_the_ID()).'");\'>';

	}

	else

	{

	echo '<div class="box_text_inner box_text_last curs" onclick=\'javascript:redir("'.get_permalink(get_the_ID()).'");\'>';	

	} 

	echo '<h2>';

	the_title();

	echo '</h2><div class="box_text_in"><div  class="text_middl_p">';

	echo '<p class="img_p">';

	//print_r($image);

	echo '<img src="'.$image[0].'">';

	echo '</p>';

	echo '<p class="text_middl_p">';

	echo $my_excerpt = get_excerpt_by_id(get_the_ID());

	//the_excerpt();

	

	echo '</p></div>';

	echo '<p class="more"><a href="'.get_permalink(get_the_ID()).'"><span>Read More &gt;</span></a></p>';

	echo '</div>';

	//echo get_the_ID();die;

	$image = wp_get_attachment_image_src( get_post_thumbnail_id( get_the_ID() ), 'single-post-thumbnail' );

	echo '</div>';

	$i++;

endwhile;

  ?> 

 <script>function redir(val){window.location = val;}</script> 
<?php 
// Reset Query
wp_reset_query();
}

function get_excerpt_by_id($post_id){
$the_post = get_post($post_id); //Gets post ID
$the_excerpt = $the_post->post_content; //Gets post_content to be used as a basis for the excerpt
$excerpt_length =25; //Sets excerpt length by word count
$the_excerpt = strip_tags(strip_shortcodes($the_excerpt)); //Strips tags and images
$words = explode(' ', $the_excerpt, $excerpt_length + 1);
if(count($words) > $excerpt_length) :
array_pop($words);
array_push($words, '…');
$the_excerpt = implode(' ', $words);
endif;
//$the_excerpt = '<p>' . $the_excerpt . '</p>';
return $the_excerpt;
}
function Get_Latest_Post()
{
$args = array(
    'numberposts' => 1,
    'offset' => 0,
     'category__not_in' =>array(10,12),
     'orderby' => 'post_date',
    'order' => 'DESC',
    'post_type' => 'post',
    'post_status' => 'publish',
    'suppress_filters' => true );
   $recentPost=wp_get_recent_posts( $args );
   $date=date('F j,Y',strtotime($recentPost[0]["post_date"]));
//echo "<PRE>";
//print_r($recentPost);
//echo "</PRE>";
 // echo $recentPost[0]["ID"];
  $my_excerpt = get_excerpt_by_id($recentPost[0]["ID"]);
        echo '<div class="box_text curs" onclick=\'javascript:redir("'.get_permalink($recentPost[0]["ID"]).'");\'>'; 
	echo '<h2>Blog Updates</h2>'; 
	echo '<div class="box_text_in">';
	echo  '<div class="text_middl_p">';
	echo '<div class="md_lov" style="min-height:69px;">'.$recentPost[0]["post_title"].'<br>';
	echo '<span>'.$date.'</span>';
	echo '</div>';
	echo '<p class="middle_p">';
	echo   $my_excerpt ;
	echo '</p>';
	echo '</div>';
	echo '<p class="more"><a href="'.get_permalink($recentPost[0]["ID"]).'"><span>Read More &gt;</span></a></p>';
	echo '</div></div>';
    ?> 
 <script>function redir(val){window.location = val;}</script> 
<?php 
}
add_action('init', 'init_theme_method');
 
function init_theme_method() {
   add_thickbox();
}

// hook failed login
add_action('wp_login_failed', 'my_front_end_login_fail'); 
 
function my_front_end_login_fail($username){
    // Get the reffering page, where did the post submission come from?
    $referrer = $_SERVER['HTTP_REFERER'];
 
    // if there's a valid referrer, and it's not the default log-in screen
    if(!empty($referrer) && !strstr($referrer,'wp-login') && !strstr($referrer,'wp-admin')){
        // let's append some information (login=failed) to the URL for the theme to use
        wp_redirect($referrer . '?login=failed');
	
    exit;
    }  
    
}


//4 June Dynamic Footer Banner Code Using NextGen Gallery Start here
function footer_banner_images()
{
			global $wpdb;
			$gid=1;
			$sql="select wp_ngg_gallery.name, wp_ngg_pictures.filename ,wp_ngg_gallery.path,wp_ngg_pictures.alttext,wp_ngg_pictures.description
			      from wp_ngg_gallery, wp_ngg_pictures
			      where wp_ngg_pictures.galleryid = wp_ngg_gallery.gid
			      and wp_ngg_gallery.gid =". $gid . " limit 0,4";
			$gallery=$wpdb->get_results($sql);
			return $gallery;			
				
}
//NextGen Gallery end here
/************ Function for showing right sidebar called at right_sidebar.php******************/
function Show_sidebar_right(){ ?>
	
		  <?php query_posts( array ( 'category_name' => 'construction_news_sidebar', 'posts_per_page' => 5,'orderby=date') ); ?>
      		 <?php while (have_posts()) : the_post(); ?>
                  <div class="trader-box">
		  <div class="traders-img_txt">
			<div class="traders-img_small">
				 <?php if(get_the_post_thumbnail( get_the_ID())==""){ ?>
				<img border="0" align="left" src="<?php bloginfo('template_url')?>/images/img_cate.png" />
				<?php } else {
				echo get_the_post_thumbnail( get_the_ID());
				}?>
			</div>
                       <div class="traders-head-txt"><span><a style="color:#707070;" href="<?php echo site_url().'?page_id=140&id=section'.get_the_ID();?>"><?php the_title(); ?></a></span></div>
		 </div>
		</div>
		  <?php endwhile;?>
     
          
<?php }
/************ Function for News content called at right_sidebar.php******************/
function Show_News_content(){ ?>
 <h3>News</h3>
		<?php query_posts( array ( 'category_name' => 'News', 'posts_per_page' => -1 ) ); ?>
      			<?php while (have_posts()) : the_post(); ?>
			   <div class="job-list-part">
			      <?php if(get_the_post_thumbnail( get_the_ID())==""){ ?>
			       <div class="job-img-part"><img src="<?php bloginfo('template_url')?>/images/logo-img-demo.png" alt=""></div>
			    <?php }else{ ?>
                  <div class="job-img-part"><?php echo get_the_post_thumbnail( get_the_ID());?></div> <?php } ?>
				<div class="job-list-txt-plc">
				<h5><?php the_title(); ?></h5>
				<?php the_excerpt();?>
				 </div>
			         </div>	
		       <?php endwhile;
}

/************ Function for News content of sidebar called at page.php******************/
function Show_News_content_sidebar(){ ?>
	<?php $id=$_GET['id'];?>
	<script type="text/javascript">
	var id='<?php echo $id;?>'; 
	$(document).ready(function() {
		//alert(id);
		document.location.href='#'+id;
	//$('#'+id).focus();
		});
</script>
	  <?php query_posts( array ( 'category_name' => 'construction_news_sidebar', 'posts_per_page' => -1) ); ?>
      		 <?php while (have_posts()) : the_post(); ?>
			 <div class="job-list-part" id="<?php echo 'section'.get_the_ID();?>">
			      <?php if(get_the_post_thumbnail( get_the_ID())==""){ ?>
			       <div class="job-img-part"><img src="<?php bloginfo('template_url')?>/images/logo-img-demo.png" alt=""></div>
			    <?php }else{ ?>
                  <div class="job-img-part"><?php echo get_the_post_thumbnail( get_the_ID());?></div> <?php } ?>
				<div class="job-list-txt-plc">
				<h5><?php the_title(); ?></h5>
				<?php the_content();?>
				 </div>
			         </div>	
		       <?php endwhile;
}
/*********** Advice section **************** called at rightsidebar */

function advice_section_dispaly(){
	  query_posts( array ( 'category_name' => 'Tips and Advice', 'posts_per_page' => -1) ); ?>
      		 <?php while (have_posts()) : the_post(); ?>
		  <div class="job-list-part">
			      <?php if(get_the_post_thumbnail( get_the_ID())==""){ ?>
			       <div class="job-img-part"><img src="<?php bloginfo('template_url')?>/images/logo-img-demo.png" alt=""></div>
			    <?php }else{ ?>
                  <div class="job-img-part"><?php echo get_the_post_thumbnail( get_the_ID());?></div> <?php } ?>
				<div class="job-list-txt-plc">
				<h5><?php the_title(); ?></h5>
				<?php the_excerpt();?>
				 </div>
			         </div>	
		       <?php endwhile;
}?>